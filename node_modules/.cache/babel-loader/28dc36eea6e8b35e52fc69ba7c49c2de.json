{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Documents/FI-group-project/src/components/Reviews/Reviews.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Reviews.css';\nimport { FaTrash, FaEdit } from \"react-icons/fa\"; // import {uuid} from \"uuidv4\"\n// const Reviews = () => {\n//   const [form, setForm] = useState({resturant: \"\", review:\"\", id:null })\n//   const [reviews, setReviews] = useState([])\n//   const [edit, setEditing] = useState(false)\n//   const sendit = (e) => {\n//     e.preventDefault()\n//     setReviews([...reviews, form])\n//     setForm({resturant: \"\", review:\"\", id:null })\n//   }\n//   const update = e =>{\n//     e.preventDefault()\n//     setEditing(false)\n//     const updatedRevs = reviews.map(review => review.id == form.id ? form : review)\n//     setReviews(updatedRevs)\n//     setForm({resturant: \"\", review:\"\", id:null })\n//   }\n//   const handleEdit = id => {\n//     const editPost = reviews.filter(review => review.id == id)\n//     setForm(editPost[0])\n//     setEditing(true)\n//   }\n//   const change = e =>{\n//     const {name, value} = e.target\n//     setForm({...form, [name]:value})\n//   }\n//   const deleting = id => {\n//     const uprev = reviews.filter(review => \n//       review.id != id\n//       )\n//       setReviews(uprev)\n//   }\n//   return (\n//     <div className='master'>\n//       <form action=\"\" onSubmit={edit ? update : sendit } className=\"form\">\n//         <h2>Add Resturant</h2>\n//         <label> Name</label>\n//         <input type=\"text\" \n//         placeholder='Restuarnt name' \n//         id=\"resturant\" name='resturant' value={form.resturant} onChange={change}/>\n//         <label> Location </label>\n//         <textarea type=\"text\" \n//         placeholder='Please leave a review' \n//         id=\"review\" name='review' value={form.review} onChange={change}/>\n//         <button type='submit'>{edit ? \"Update\" : \"Submit\"}</button>\n//       </form>\n//       <div className='revlist'>\n//         {reviews.map((review) => \n//         <div className='revitem'>\n//           <h2>{review.resturant}</h2>\n//           <p>{review.review}</p>\n//           <div className=\"buttons\">\n//             <button onClick={() => deleting(review.id)}> <FaTrash/> </button>\n//             <button onClick={() => handleEdit(review.id)}><FaEdit/></button>\n//           </div>\n//         </div>\n//         )}\n//       </div>\n//     </div>\n//   )\n// }\n// export default Reviews\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Reviews() {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const [formData, setFormData] = useState({\n    comment: \"\",\n    user: \"\"\n  });\n  useEffect(() => {\n    fetch(\"https://rack-hosting-1.herokuapp.com/restaurants\").then(res => res.json()).then(data => {\n      setComments(data);\n    }, [comments, setComments]);\n  });\n  const allComments = comments.map(comment => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayComment\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Comment:  \", comment.comment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name:  \", comment.user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 18\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 12\n    }, this);\n  }); //Handle Change and submit\n\n  function handleCommentChange(e) {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const createdComment = {\n      name: formData.name,\n      location: formData.location\n    };\n    fetch(\"https://rack-hosting-1.herokuapp.com/restaurants\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(createdComment)\n    }).then(res => res.json()).then(newp => {\n      const newComments = [...comments, newp];\n      setComments(newComments);\n      setFormData({ ...formData,\n        name: \"\",\n        location: \"\"\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 10\n    }, this), allComments, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Leave a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"updateForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: formData.name,\n        placeholder: \"Comment\",\n        name: \"name\",\n        onChange: handleCommentChange,\n        rows: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 129\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formData.location,\n        placeholder: \"name\",\n        name: \"location\",\n        onChange: handleCommentChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 118\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"submit\",\n        onClick: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 6\n  }, this);\n}\n\n_s(Reviews, \"gfcSmC+KDo6K6lCLer1HQmWCF1s=\");\n\n_c = Reviews;\nexport default Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"names":["React","useState","useEffect","FaTrash","FaEdit","Reviews","comments","setComments","formData","setFormData","comment","user","fetch","then","res","json","data","allComments","map","id","handleCommentChange","e","target","name","value","handleSubmit","preventDefault","createdComment","location","method","headers","body","JSON","stringify","newp","newComments"],"sources":["/home/moringa/Documents/FI-group-project/src/components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './Reviews.css'\nimport {FaTrash, FaEdit} from \"react-icons/fa\"\n// import {uuid} from \"uuidv4\"\n\n// const Reviews = () => {\n\n//   const [form, setForm] = useState({resturant: \"\", review:\"\", id:null })\n//   const [reviews, setReviews] = useState([])\n//   const [edit, setEditing] = useState(false)\n\n//   const sendit = (e) => {\n//     e.preventDefault()\n//     setReviews([...reviews, form])\n//     setForm({resturant: \"\", review:\"\", id:null })\n\n//   }\n\n//   const update = e =>{\n//     e.preventDefault()\n//     setEditing(false)\n//     const updatedRevs = reviews.map(review => review.id == form.id ? form : review)\n//     setReviews(updatedRevs)\n//     setForm({resturant: \"\", review:\"\", id:null })\n//   }\n  \n//   const handleEdit = id => {\n//     const editPost = reviews.filter(review => review.id == id)\n//     setForm(editPost[0])\n//     setEditing(true)\n//   }\n\n//   const change = e =>{\n//     const {name, value} = e.target\n//     setForm({...form, [name]:value})\n//   }\n\n//   const deleting = id => {\n//     const uprev = reviews.filter(review => \n//       review.id != id\n//       )\n//       setReviews(uprev)\n    \n//   }\n\n//   return (\n//     <div className='master'>\n//       <form action=\"\" onSubmit={edit ? update : sendit } className=\"form\">\n//         <h2>Add Resturant</h2>\n//         <label> Name</label>\n//         <input type=\"text\" \n//         placeholder='Restuarnt name' \n//         id=\"resturant\" name='resturant' value={form.resturant} onChange={change}/>\n\n//         <label> Location </label>\n//         <textarea type=\"text\" \n//         placeholder='Please leave a review' \n//         id=\"review\" name='review' value={form.review} onChange={change}/>\n//         <button type='submit'>{edit ? \"Update\" : \"Submit\"}</button>\n//       </form>\n//       <div className='revlist'>\n//         {reviews.map((review) => \n//         <div className='revitem'>\n//           <h2>{review.resturant}</h2>\n//           <p>{review.review}</p>\n//           <div className=\"buttons\">\n//             <button onClick={() => deleting(review.id)}> <FaTrash/> </button>\n//             <button onClick={() => handleEdit(review.id)}><FaEdit/></button>\n//           </div>\n//         </div>\n//         )}\n\n//       </div>\n//     </div>\n//   )\n// }\n\n// export default Reviews\n\n\n\nfunction Reviews(){\n    const [comments, setComments] =useState([])\n    const[formData, setFormData] = useState({\n        comment:\"\",\n        user:\"\", \n    })\n    useEffect(()=>{\n        fetch(\"https://rack-hosting-1.herokuapp.com/restaurants\")\n        .then((res)=> res.json())\n        .then((data) =>{\n         setComments(data)\n        },[comments,setComments])\n        \n    });\n\n    const allComments = comments.map((comment) =>{\n        return (\n           <div key={comment.id} className=\"displayComment\">\n                 <p >Comment:  {comment.comment}</p>\n                 <p >Name:  {comment.user}</p>\n           </div>\n           \n        )\n    })\n\n\n    //Handle Change and submit\n    function handleCommentChange(e){\n        setFormData({\n            ...formData, [e.target.name]:e.target.value\n          });\n    }\n    function handleSubmit(e){\n        e.preventDefault();\n        const createdComment ={\n          name:formData.name,\n          location:formData.location\n        };\n    \n        fetch(\"https://rack-hosting-1.herokuapp.com/restaurants\",{\n          method: \"POST\",\n          headers:{\n            \"Content-Type\": \"application/json\",\n          },\n          body:JSON.stringify(createdComment),\n        })\n        .then(res => res.json())\n        .then(newp =>{\n            const newComments =  [...comments, newp]\n            setComments(newComments);\n            setFormData({\n              ...formData,\n              name:\"\",\n              location:\"\"\n            })\n        })\n      }\n    \n    \n    \n    return(\n\n     <div className=\"commentForm\">\n         <h1>Comments</h1>\n         {allComments}\n         <hr></hr>\n         <h1>Leave a Comment</h1>\n         <form className=\"updateForm\">\n         <textarea value={formData.name} placeholder=\"Comment\" name=\"name\" onChange={handleCommentChange} rows=\"10\" ></textarea><br/>\n         <input value={formData.location} placeholder=\"name\" name=\"location\"  onChange={handleCommentChange}></input><br/>\n         <input type=\"submit\"className=\"submit\"  onClick={handleSubmit}/>\n         </form>\n     </div>\n     )\n}\nexport default Reviews"],"mappings":"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"},"metadata":{},"sourceType":"module"}